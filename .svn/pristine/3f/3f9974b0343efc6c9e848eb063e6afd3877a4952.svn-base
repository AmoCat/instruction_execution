# -*- coding: utf-8 -*-

import re
import urllib2
from urllib2 import Request
import urllib
from bs4 import BeautifulSoup
import sys

QUNAR_URL = "http://train.qunar.com/dict/open/s2s.do"
#QUNAR_URL = "http://touch.qunar.com/h5/train/trainList"
#http://train.qunar.com/dict/open/s2s.do?dptStation=北京&arrStation=上海&date=2016-06-01&type=normal&user=neibu&source=site&start=1&num=500&sort=3
#http://train.qunar.com/dict/open/s2s.do?callback=jQuery17203771695054035038_1464694247431&dptStation=%E5%8C%97%E4%BA%AC&arrStation=%E4%B8%8A%E6%B5%B7&date=2016-06-01&type=normal&user=neibu&source=site&start=1&num=500&sort=3&_=1464694247635
class Train(object):
    def __init__(self, train_number,start_station,arrival_station,from_time, to_time,seats, all_time,price,ticket_left):
        self.train_number = train_number
        self.ticket_left = ticket_left
        self.from_time = from_time
        self.to_time = to_time
        self.start_station = start_station
        self.arrival_station = arrival_station
        self.price = price
        self.all_time = all_time
        self.seats = seats

    def __unicode__(self):
        rt = u"%s\t" % (self.train_number)
        rt += u"%s ~ %s\t" % (self.from_time, self.to_time)
        rt += u"%s - %s\t" % (self.start_station, self.arrival_station)
        rt += u"%s\t" % self.all_time
        rt += u"%s\t" % self.seats
        rt += u"%s" % self.price
        rt += u"%s" % self.ticket_left
        return rt

    def __str__(self):
        return unicode(self).encode('utf-8')

class QunarSpider(object):
    """
    the qunar.com spider to query flight list
    """
    def __init__(self):
        """ constructiong funcion """
        #self.qunar_url_template = "%s?startStation=%%s&endStation=%%s&searchType=stasta&date=%%s&sort=7"\
        #        %(QUNAR_URL)"\
        #self.qunar_url_template = "%s?callback=jQuery17203771695054035038_1464694247431&dptStation=%%s&arrStation=%%s&date=%%s&type=normal&user=neibu&source=site&start=1&num=500&sort=3&_=1464694247635"\
        #                %(QUNAR_URL)
        self.qunar_url_template = "%s?dptStation=%%s&arrStation=%%s&date=%%s&type=normal&user=neibu&source=site&start=1&num=500&sort=3"\
                        %(QUNAR_URL)

    def make_query_url(self, start_city, arrival_city, start_date, *args, **kwargs):
        query_url = self.qunar_url_template % (start_city, arrival_city, start_date)
        return query_url

    def get_ticket_info(self, query):
        """ get ticket infomation"""
        query_url = self.make_query_url(**query)
        if query_url == None:
            return None
        #query_url = "http://train.qunar.com/stationToStation.htm?fromStation=%E5%8C%97%E4%BA%AC&toStation=%E4%B8%8A%E6%B5%B7&date=2016-05-17&stsSearch="
        #TODO logger server
        print >> sys.stderr, "In get_ticket_info,Spider-INFO::Going... to the page %s,to check if there is any affordable ticket" %query_url
        req = Request(query_url)
        req.add_header('User-Agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36')
        #req.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko')
        try:
            response = urllib2.urlopen(req)
            response_html = response.read()
            print response_html
            #data = json.loads(response_html)
            #f = open('json_data.txt','w')
            #print >> f , data
        except Exception,e :
            print >> sys.stderr, e
            return None
        response.close()

        #key_word = self.get_font_key_word(response_html)
        #if not key_word:
        #    return None
        #TODO logger server
        #print >> sys.stderr, "In get_ticket_info,Spider-INFO::found the price font-pattern: %s" %key_word
        soup = BeautifulSoup(response_html, 'html.parser')
        #f = open('soup.txt','w')
        #print >> f,soup
        '''
        res = ""
        for i in  soup.findAll(attrs={"class":"price {0}".format(key_word)}):
            price =  int(unicode(i.string).encode('utf-8'))
            if price < AFFORD_PRICE:
                res += str(price)+"RMB   "
        '''
        trains = []
        for l in soup.findAll('li', class_="qn_arrow_grey r"):
            ticket_info = l.find('p', class_="clearfix trainName").get_text().strip().split()
            train_number = ticket_info[0]
            #ticket_left = ticket_info[1]
            from_time = l.find('p', class_="dInfo").find('span', class_="important").string
            to_time = l.find('p', class_="aInfo").find('span', class_="qn_grey").string
            start_station = l.find('p', class_="dInfo").find('span', class_="station").string
            arrival_station = l.find('p', class_="aInfo").find('span', class_="qn_grey station").string
            all_time = l.find('p', class_="allTime").find('span', class_="time").string
            ticket_left = l.find('p', class_="clearfix trainName").find('span', class_="qn_fr qn_grey").string.strip()
            print "##",ticket_left,"###"
            if l.find('p', class_="allTime").find('span',class_="qn_grey des"):
                seats = "已售空"
                price = str(0)
            else:
                price = l.find('p', class_="dInfo").find('span', class_="qn_fr qn_orange important").string
                seats = l.find('p', class_="aInfo").find('span', class_="qn_fr").string
            train = Train(train_number,start_station,arrival_station,from_time,to_time,seats,all_time,price,ticket_left)
            trains.append(train)
            #for train in trains:
            #    print train
        return {'trains': trains, 'link': query_url}

if __name__ =="__main__":
    qunar_spider = QunarSpider()
    res = qunar_spider.get_ticket_info({'start_city': '上海', 'arrival_city': '广州', 'start_date': '2016-05-29'})
    for t in res:
        print t
    res = qunar_spider.get_ticket_info({'start_city': '哈尔滨', 'arrival_city': '广州', 'start_date': '2016-05-30'})
    for t in res:
        print t
